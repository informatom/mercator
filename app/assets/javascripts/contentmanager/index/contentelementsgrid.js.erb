function contentelementsgrid() {
  $('#contentelementsgrid').w2grid({
    name: 'contentelementsgrid',
    header: 'List of Content Elements',
    multiSelect : false,
    method: 'GET',
    show: {
      toolbar: true,
      footer: true,
      selectColumn: true
    },
    toolbar: {
        items: [
          { type: 'button', id: 'edit', caption: w2utils.lang('Edit'), img: 'fa fa-edit' }
        ],
        onClick: function (target, data) {
          if (target == "edit") {
            w2popup.open({
              title: 'Edit Content Element',
              width: 800,
              height: 600,
              body: '<div id="contentElementForm"></div>',
              onOpen  : function (event) {
                event.onComplete = function () {
                  $('#contentElementForm').w2render('contentElementForm')
                  var selection = w2ui['contentelementsgrid'].getSelection()
                  if (selection.length == 1) {
                    w2ui['contentElementForm'].recid  = selection[0]

                    // Data should not be merged, it will be read from the database
                    // w2ui['contentElementForm'].record = $.extend(true, {}, w2ui['contentelementsgrid'].get(selection[0])) // merges data in
                    w2ui['contentElementForm'].refresh()
                  } else {
                    w2ui['contentElementForm'].clear();
                  }
                }
              }
            })
          }
        }
    },
    columns: [
      { field: 'recid',              caption: 'ID',             size: '50px',  sortable: true, hidden: true , attr: "align=center"},
      { field: 'name_de',            caption: 'Name DE',        size: '150px', sortable: true,
        render: function (record) {
          return '<div id ="content-element-' + record.recid + '" class="draggable">' + record.name_de + '</div>'
        }},
      { field: 'name_en',            caption: 'Name EN',        size: '150px', sortable: true, hidden: true },
      { field: 'markup',             caption: 'Markup',         size: '40px',                  hidden: true },
      { field: 'content_de',         caption: 'Inhalt DE',      size: '50%',   sortable: true},
      { field: 'content_en',         caption: 'Inhalt EN',      size: '300px', sortable: true, hidden: true },
      { field: 'created_at',         caption: 'erzeugt',        size: '130px', sortable: true, hidden: true,
        render: function (record) { return moment(record.created_at).format("YYYY-MM-DD HH:mm:ss") } },
      { field: 'updated_at',         caption: 'ge√§ndert',       size: '130px', sortable: true,
        render: function (record) { return moment(record.updated_at).format("YYYY-MM-DD HH:mm:ss") } },
      { field: 'document_file_name', caption: 'Dokument',       size: '150px', sortable: true },
      { field: 'photo_file_name',    caption: 'Photo',          size: '150px', sortable: true },
      { field: 'thumb_url',          caption: 'Thumbnail Path', size: '150px',                 hidden: true },
      { field: 'photo_url',          caption: 'Photo Path',     size: '150px',                 hidden: true }
    ],
    searches: [
      { field: 'name_de',    caption: 'Name DE',   type: 'text' },
      { field: 'name_en',    caption: 'Name EN',   type: 'text' },
      { field: 'content_de', caption: 'Inhalt DE', type: 'text' },
      { field: 'content_en', caption: 'Inhalt EN', type: 'text' }
    ],
    sortData: [{
      field: 'name_de',
      direction: 'ASC'
    }],
    onClick: function(event) {
      event.onComplete = function () {
        var sel = this.getSelection()
        if (this.get(sel)) {
          previewImage(this.get(sel).recid)
        }
      }
    },
    onSelect: function(event) {
      event.onComplete = function () {
        registerDraggables()
      }
    }
  })
}