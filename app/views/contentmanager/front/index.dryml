<page>
  <config:>
    <script>
      $(function () {


// Layout //

w2utils.locale('<%= font_path "contentmanager/de-de.json" %>')

$('#myLayout').w2layout({
  name: 'contentmanager',
  panels: [
    { type: 'top', size: 60, resizable: true, title: 'Content Manager' },
    { type: 'left', size: 250, resizable: true, title: 'Website Structure', content: "<div id='pagetree'></div>" },
    { type: 'main', title: 'Webpage', resizable: true, content: "<div id='webpage' style='height:100%;'></div>" },
    { type: 'preview', size: 400, resizable: true, title: 'Assignments', content: "<div id='assignments' style='height:100%' ></div>" },
    { type: 'right', size: 1300, resizable: true}
  ],
  onRender: function(event) {
    event.onComplete = function () {
      displayWebpage()
      displayAssignmentsgrid()
    }
  }
})

$().w2layout({
  name: 'elementexplorer',
  panels: [
    { type: 'main', resizable: true, title: 'Folder Structure',
      content: "<div id='foldertree-toolbar' style='height:5%'></div><div id='foldertree' style='height:95%'></div>" },
    { type: 'right', resizable: true, size: 1100, title: 'Content Elements',
      content: "<div id='contentelementsgrid' style='height:100%'></div>" },
    { type: 'preview', size: 200, resizable: true, title: 'Preview', content: "<div id='preview'></div>" }
  ],
  onRender: function(event) {
    event.onComplete = function () {
      displayFoldertreeToolbar()
      displayFoldertree()
      displayContentelementsgrid()
    }
  }
})

w2ui['contentmanager'].content('right', w2ui['elementexplorer'])


// Webpagetree //

$("#pagetree").fancytree({
  source: <%= raw @webpagesarray %>,
  extensions: ["dnd"],
  dnd: {
    dragStart: function(node, data) { return true },
    dragEnter: function(node, data) { return true },
    dragDrop: function(node, data) {
      data.otherNode.moveTo(node, data.hitMode)

      Messenger().run({
        progressMessage: '<%= t "activerecord.attribute_help.category.updating" %> ...',
        successMessage: '<%= t "activerecord.attribute_help.category.updated" %>',
        errorMessage: '<%= t "activerecord.attribute_help.category.update_failed" %>',
        hideAfter: 3
      },{
        url:"/contentmanager/front/update_webpages",
        method: "POST",
        data: {
          authenticity_token: "<%= form_authenticity_token %>",
          webpages: $("#pagetree").fancytree("getTree").toDict()
        },
        dataType: 'script'
      })
    }
  },
  click: function(event, data) {
    w2ui['assignments'].load('/contentmanager/front/show_assignments/' +  data.node.key)
    w2ui['webpage'].load('/contentmanager/front/show_webpage/' +  data.node.key)
  }
})


// Sigle Webpage Grid //

function displayWebpage() {
  $('#webpage').w2grid({
    name: 'webpage',
    method: 'GET',
    columns : [
      { field: 'attribute', caption: 'Attribut', size: '50%' },
      { field: 'value', caption: 'Wert', size: '50%'}
    ]
  })
}


// Assignments //

function displayAssignmentsgrid() {
  $('#assignments').w2grid({
    name: 'assignments',
    method: 'GET',
    show: { selectColumn: true },
    columns: [
      { field: 'used_as', caption: 'used as', size: '50%', sortable: true },
      { field: 'content_element_name', caption: 'Content Element', size: '50%',
        render: function (record) {
          return '<div id="assignment-' + record.recid + '" class="droppable">' +
                  (record.content_element_name || '<span style="color: #ff0000"> not assigned</span>') + '</div>'
      }}
    ],
    sortData: [ { field: 'used_as', direction: 'ASC' } ],

    onRefresh: function(event) {
      event.onComplete = function () {
        $( ".droppable" ).droppable({
          activeClass: "ui-state-default",
          hoverClass: "ui-state-hover",
          drop: function( event, ui ) {
            var draggable = ui.draggable[0]
            var contentElementId = parseInt(draggable.id.split("-")[2])
            var associationID = parseInt(this.id.split("-")[1])

            Messenger().run({
              progressMessage: '<%= t "activerecord.attribute_help.page_content_element_assignment.updating" %> ...',
              successMessage: '<%= t "activerecord.attribute_help.page_content_element_assignment.updated" %>',
              errorMessage: '<%= t "activerecord.attribute_help.page_content_element_assignment.update_failed" %>',
              hideAfter: 3
            },{
              url:"/contentmanager/front/update_page_content_element_assignment/" + associationID,
              method: "POST",
              data: {
                authenticity_token: "<%= form_authenticity_token %>",
                content_element_id: contentElementId
              },
              dataType: 'script',
              success: function(response){
                w2ui['assignments'].load('/contentmanager/front/show_assignments/' + response)
              }
            })
          }
        })
      }
    }
  })
}


// Foldertree //

function displayFoldertree() {
  $("#foldertree").fancytree({
    source: { url: "/contentmanager/front/show_foldertree" },
    extensions: ["dnd"],
    dnd: {
      droppable: {
        activeClass: "ui-state-default",
        hoverClass: "ui-state-hover"
      },
      dragStart: function(node, data) { return true },
      dragEnter: function(node, data) { return true },
      dragDrop: function(node, data) {
        if( !data.otherNode ){
          // It's a non-tree draggable
          var draggable = data.draggable.element[0]
          var contentElementId = parseInt(draggable.id.split("-")[2])

          Messenger().run({
            progressMessage: '<%= t "activerecord.attribute_help.content_element.moving" %> ...',
            successMessage: '<%= t "activerecord.attribute_help.content_element.moved" %>',
            errorMessage: '<%= t "activerecord.attribute_help.content_element.move_failed" %>',
            hideAfter: 3
          },{
            url:"/contentmanager/front/update_content_element/" + contentElementId,
            method: "POST",
            data: {
              authenticity_token: "<%= form_authenticity_token %>",
              folder_id: data.node.key
            },
            dataType: 'script',
            success: function(response){
              w2ui['contentelementsgrid'].load('/contentmanager/front/show_content_elements/' + response)
            }
          })

        } else {
          // It's a tree draggable
          data.otherNode.moveTo(node, data.hitMode)

          Messenger().run({
            progressMessage: '<%= t "activerecord.attribute_help.folder.updating" %> ...',
            successMessage: '<%= t "activerecord.attribute_help.folder.updated" %>',
            errorMessage: '<%= t "activerecord.attribute_help.folder.update_failed" %>',
            hideAfter: 3
          },{
            url:"/contentmanager/front/update_folders",
            method: "POST",
            data: {
              authenticity_token: "<%= form_authenticity_token %>",
              folders: $("#foldertree").fancytree("getTree").toDict()
            },
            dataType: 'script'
          })
        }
      }
    },
    click: function(event, data) {
      w2ui['contentelementsgrid'].load('/contentmanager/front/show_content_elements/' + data.node.key)
    }
  })
}


// Folder Tree Toolbar //

function displayFoldertreeToolbar() {
  $('#foldertree-toolbar').w2toolbar({
    name: 'foldertree-toolbar',
    items: [
      { type: 'button',  id: 'add',     caption: 'Add',    icon: 'fa fa-folder' },
      { type: 'button',  id: 'edit',  caption: 'Edit', icon: 'fa fa-edit' },
      { type: 'button',  id: 'delete',  caption: 'Delete', icon: 'fa fa-close' }
    ],
    onClick: function (event) {
      switch (event.target) {
      case 'add':
        w2popup.open({
          title: 'Create Folder',
          body: '<div id="folder-form"></div>',
          onOpen  : function (event) {
            event.onComplete = function () {
              $('#folder-form').w2render('folder-form')
            }
          }
        })
        break
      case 'delete':
        var active_node = $("#foldertree").fancytree("getTree").getActiveNode()
        if (active_node) {
          w2confirm('Are you sure?', function (button) {
            if (button =='Yes') {

              Messenger().run({
                progressMessage: '<%= t "activerecord.attribute_help.folder.deleting" %> ...',
                successMessage: '<%= t "activerecord.attribute_help.folder.deleted" %>',
                errorMessage: '<%= t "activerecord.attribute_help.folder.delete_failed" %>',
                hideAfter: 3
              },{
                url:"/contentmanager/front/delete_folder/" + active_node.key,
                method: "POST",
                data: {
                  authenticity_token: "<%= form_authenticity_token %>"
                },
                dataType: 'script',
                success: function(response){
                  $("#foldertree").fancytree("getTree").reload()
                },
                error: function(response){
                  return response.responseText
                }
              })
            }
          })
        } else {
          w2alert('No folder selected')
        }
        break
      case 'edit':
        var active_node = $("#foldertree").fancytree("getTree").getActiveNode()
        if (active_node) {
          w2popup.open({
            title: 'Create Folder',
            body: '<div id="folder-form"></div>',
            onOpen  : function (event) {
              event.onComplete = function () {
                w2ui['folder-form'].recid = active_node.key
                $('#folder-form').w2render('folder-form')
              }
            }
          })
        } else {
          w2alert('No folder selected')
        }
        break
      }
    }
  })
}


// Folder Form
$().w2form({
    name   : 'folder-form',
    url: 'contentmanager/front/folder',
    fields : [
      { field: 'name', type: 'text', required: true, html: { caption: 'Name' } }
    ],
    actions: {
      'Cancel': function () { w2popup.close() },
      'Clear': function () { this.clear() },
      'Save': function (event) { this.save() }
    },
    postData: { authenticity_token: "<%= form_authenticity_token %>" },
    onSave: function(event) {
      w2popup.close()
      $("#foldertree").fancytree("getTree").reload()
    }
})

// Content Elements Grid //

function displayContentelementsgrid() {
  $('#contentelementsgrid').w2grid({
    name: 'contentelementsgrid',
    header: 'List of Content Elements',
    method: 'GET',
    show: { toolbar: true,
            footer: true,
            selectColumn: true },
    columns: [
      { field: 'recid', caption: 'ID', size: '50px', sortable: true, attr: "align=center", hidden: true },
      { field: 'name_de', caption: 'Name DE', size: '150px', sortable: true,
        render: function (record) {
          return '<div id ="content-element-' + record.recid + '" class="draggable">' + record.name_de + '</div>'
        }},
      { field: 'name_en', caption: 'Name EN', size: '150px', sortable: true, hidden: true },
      { field: 'markup', caption: 'Markup', size: '40px', hidden: true },
      { field: 'content_de', caption: 'Inhalt DE', size: '50%' },
      { field: 'content_en', caption: 'Inhalt EN', size: '300px', hidden: true },
      { field: 'created_at', caption: 'erzeugt', size: '130px', hidden: true,
        render: function (record) { return moment(record.created_at).format("YYYY-MM-DD HH:mm:ss") } },
      { field: 'updated_at', caption: 'geändert', size: '130px' ,
        render: function (record) { return moment(record.updated_at).format("YYYY-MM-DD HH:mm:ss") } },
      { field: 'document_file_name', caption: 'Dokument', size: '150px' },
      { field: 'photo_file_name', caption: 'Photo', size: '150px' },
      { field: 'thumb_url', caption: 'Photo Path', size: '150px', hidden: true } ],
    searches: [
      { field: 'name_de', caption: 'Name DE', type: 'text' },
      { field: 'name_en', caption: 'Name EN', type: 'text' },
      { field: 'content_de', caption: 'Inhalt DE', type: 'text' },
      { field: 'content_en', caption: 'Inhalt EN', type: 'text' } ],
    sortData: [{ field: 'name_de', direction: 'ASC' } ],

    onClick: function(event) {
      event.onComplete = function () {
        var sel = this.getSelection()
        previewImage(this.get(sel).thumb_url)
      }
    },
    onRefresh: function(event) {
      event.onComplete = function () {
        $('.draggable').draggable({
          cursor: 'crosshair',
          opacity: 0.9,
          helper: "clone",
          containment: ".myLayout",
          zIndex: 10000,
          appendTo: "body",
          connectToFancytree: true,
          cursorAt: { top: -5, left: -5 }
        })
      }
    }
  })
}

// Preview Image
function previewImage(path) {
  if (path) {
    $("#preview").html("<br/><br/><center><img src=" + path + " /></center>")
  } else {
    $("#preview").html("")
  }
}
      })
    </script>
  </config:>
</page>